spring.thymeleaf.cache=false

logging.level.root=WARN

# ============== AIAI ==================

# use aiai.ai.EncodePassord.testEncodePass() to create actual encoded password
aiai.master-password=xxx
aiai.master-username=xxx
#any non-nullable string with chars, digits, or dash. i.e. UUID
aiai.master-token=xxx

aiai.table.rows.limit=4

aiai.launchpad.enabled=true
aiai.launchpad.dir=./aiai-launchpad


aiai.station.enabled=true
#aiai.station.launchpad.url=http://127.0.0.1:8080
aiai.station.launchpad.url=http://localhost:8080

# in seconds
aiai.station.request.launchpad.timeout=3


aiai.station.dir=./aiai-station




# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost:3306/xxx?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&useSSL=false

# Username and password
spring.datasource.username = user
spring.datasource.password = pass

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


