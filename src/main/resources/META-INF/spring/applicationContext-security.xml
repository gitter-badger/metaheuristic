<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <global-method-security jsr250-annotations="enabled" />

    <beans:bean id="ep403" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <http pattern="/css/**" security="none"/>
    <http pattern="/static/css/**" security="none"/>
    <http pattern="/static/css/images/**" security="none"/>
    <http pattern="/source/**" security="none"/>
    <http pattern="/styles/**" security="none"/>

    <http pattern="/core/xsrf" use-expressions="true" entry-point-ref="ep403">
        <intercept-url pattern="/core/xsrf" access="isAuthenticated()"/>
        <csrf disabled="true"/>
    </http>

    <http pattern="/core/*Service" use-expressions="true" entry-point-ref="ep403">
        <intercept-url pattern="/core/AuthService" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/core/UserService" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/core/ManagementService" access="hasRole('ROLE_ADMIN')"/>
        <csrf disabled="true"/>
    </http>

    <http pattern="/core/**" use-expressions="true" entry-point-ref="ep403">
        <intercept-url pattern="/core/**" access="isAuthenticated()"/>
    </http>

    <!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <intercept-url pattern="/cabinet/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>

        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/security/**" access="hasRole('ROLE_ADMIN')" />

        <intercept-url pattern="/passwd/**" access="isAuthenticated()" />
        <intercept-url pattern="/2fa/**" access="isAuthenticated()" />
        <!--<intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')" />-->
        <intercept-url pattern="/member/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/login/**"  access="isAnonymous()" />
        <intercept-url pattern="/forgot/**" access="isAnonymous()"/>
        <intercept-url pattern="/signup/**" access="isAnonymous()"/>

        <intercept-url pattern="/**" access="permitAll"/>

        <form-login
                login-page="/login"
                username-parameter="j_username"
                password-parameter="j_password"
                login-processing-url="/jssc"
                authentication-failure-url="/login?login_error=t"
                default-target-url="/index"
        />

        <logout logout-url="/logout" logout-success-url="/index" delete-cookies="JSESSIONID" invalidate-session="true"/>
    </http>

    <beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder">
        <beans:constructor-arg value="10"/>
    </beans:bean>

    <beans:bean class="aiai.web.auth.CustomUserDetailsService" id="customUserDetailsService"/>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean class="aiai.server.security.googleauth.GoogleAuthenticator" id="googleAuthenticator">
        <beans:constructor-arg value="3"/>
    </beans:bean>

</beans:beans>
