create table AIAI_LP_LAUNCHPAD_ADDRESS
(
  ID          bigserial not null PRIMARY KEY,
  VERSION     bigint NOT NULL,
  URL varchar(200) not null,
  DESCRIPTION varchar(100) not null,
  SIGNATURE varchar(1000)
);

create table AIAI_ACCOUNT
(
  ID  bigserial not null PRIMARY KEY,
  VERSION bigint NOT NULL,
  USERNAME varchar(30) not null,
  TOKEN varchar(50) not null,
  PASSWORD varchar(100) not null,
  ROLES varchar(100),
  PUBLIC_NAME varchar(100),

  is_acc_not_expired BOOLEAN not null default true,
  is_not_locked BOOLEAN not null default false,
  is_cred_not_expired BOOLEAN not null default false,
  is_enabled BOOLEAN not null default false,

  mail_address varchar(100) ,
  PHONE varchar(100) ,
  PHONE_AS_STR varchar(100) ,

  CREATED_ON bigint not null
);

CREATE TABLE AIAI_LP_STATION (
  ID          SERIAL PRIMARY KEY,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  IP          VARCHAR(30),
  UPDATE_TS   TIMESTAMP DEFAULT to_timestamp(0),
  DESCRIPTION VARCHAR(250),
  ENV         TEXT,
  ACTIVE_TIME VARCHAR(250)
);

CREATE TABLE AIAI_LOG_DATA (
  ID          SERIAL PRIMARY KEY,
  REF_ID      NUMERIC(10, 0) NOT NULL,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  UPDATE_TS   TIMESTAMP DEFAULT to_timestamp(0),
  LOG_TYPE    NUMERIC(5, 0)  NOT NULL,
  LOG_DATA    TEXT not null
);

CREATE TABLE AIAI_LP_DATA (
  ID          SERIAL PRIMARY KEY,
  CODE        VARCHAR(200) not null,
  POOL_CODE   VARCHAR(250) not null,
  DATA_TYPE   NUMERIC(2, 0) NOT NULL,
  VERSION     NUMERIC(5, 0) NOT NULL,
  FLOW_INSTANCE_ID  NUMERIC(10, 0),
  UPLOAD_TS   TIMESTAMP DEFAULT to_timestamp(0),
  DATA        OID,
  CHECKSUM    VARCHAR(2048),
  IS_VALID    BOOLEAN not null default false,
  IS_MANUAL   BOOLEAN not null default false,
  FILENAME    VARCHAR(150),
  STORAGE_URL varchar(250) not null

);

CREATE INDEX AIAI_LP_DATA_POOL_CODE_ID_IDX
  ON AIAI_LP_DATA (POOL_CODE);

CREATE UNIQUE INDEX AIAI_LP_DATA_CODE_UNQ_IDX
  ON AIAI_LP_DATA (CODE);

CREATE TABLE AIAI_LP_EXPERIMENT (
  ID          SERIAL PRIMARY KEY,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  FLOW_INSTANCE_ID  NUMERIC(10, 0),
  NAME        VARCHAR(50)   NOT NULL,
  DESCRIPTION VARCHAR(250)  NOT NULL,
  CODE        VARCHAR(50)   NOT NULL,
  SEED          integer,
  NUMBER_OF_TASK         integer not null default 0,
  IS_ALL_TASK_PRODUCED   BOOLEAN not null default false,
  IS_FEATURE_PRODUCED   BOOLEAN not null default false,
  CREATED_ON   bigint not null
);

CREATE UNIQUE INDEX AIAI_LP_EXPERIMENT_CODE_UNQ_IDX
  ON AIAI_LP_EXPERIMENT (CODE);

CREATE TABLE AIAI_LP_EXPERIMENT_HYPER_PARAMS (
  ID          SERIAL PRIMARY KEY,
  EXPERIMENT_ID          NUMERIC(10, 0) NOT NULL,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  HYPER_PARAM_KEY    VARCHAR(50),
  HYPER_PARAM_VALUES  VARCHAR(250)
);

CREATE TABLE AIAI_LP_EXPERIMENT_FEATURE (
  ID          SERIAL PRIMARY KEY,
  EXPERIMENT_ID          NUMERIC(10, 0) NOT NULL,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  RESOURCE_CODES   VARCHAR(2048) not null,
  CHECKSUM_ID_CODES   VARCHAR(100) not null,
  EXEC_STATUS  smallint not null default 0,
  MAX_VALUE NUMERIC(10,4)
);

CREATE UNIQUE INDEX AIAI_LP_EXPERIMENT_FEATURE_UNQ_IDX
  ON AIAI_LP_EXPERIMENT_FEATURE (EXPERIMENT_ID, CHECKSUM_ID_CODES);

CREATE TABLE AIAI_LP_EXPERIMENT_SNIPPET (
  ID          SERIAL PRIMARY KEY,
  EXPERIMENT_ID          NUMERIC(10, 0) NOT NULL,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  SNIPPET_CODE   VARCHAR(100) NOT NULL,
  SNIPPET_TYPE   VARCHAR(20) not null
);

CREATE INDEX AIAI_LP_EXPERIMENT_SNIPPET_EXPERIMENT_ID_IDX
  ON AIAI_LP_EXPERIMENT_SNIPPET (EXPERIMENT_ID);

CREATE TABLE AIAI_LP_TASK (
  ID            SERIAL PRIMARY KEY,
  VERSION       NUMERIC(5, 0)  NOT NULL,
  PARAMS        TEXT not null,
  STATION_ID    NUMERIC(10, 0),
  ASSIGNED_ON   bigint,
  IS_COMPLETED  BOOLEAN default false not null ,
  COMPLETED_ON  bigint,
  SNIPPET_EXEC_RESULTS  TEXT,
  METRICS      TEXT,
  TASK_ORDER   smallint not null,
  FLOW_INSTANCE_ID          NUMERIC(10, 0)   NOT NULL,
  EXEC_STATE   smallint not null default 0,
  IS_RESULT_RECEIVED  BOOLEAN default false not null,
  RESULT_RESOURCE_SCHEDULED_ON  bigint NOT NULL default 0,
  PROCESS_TYPE smallint not null
);

CREATE TABLE AIAI_LP_EXPERIMENT_TASK_FEATURE (
 ID           SERIAL PRIMARY KEY,
 VERSION      NUMERIC(5, 0)  NOT NULL,
 FLOW_INSTANCE_ID       NUMERIC(10, 0)   NOT NULL,
 TASK_ID      NUMERIC(10, 0)   NOT NULL,
 FEATURE_ID   NUMERIC(10, 0)   NOT NULL,
 TASK_TYPE    smallint not null
);

CREATE INDEX AIAI_LP_EXPERIMENT_TASK_FEATURE_FLOW_INSTANCE_ID_IDX
  ON AIAI_LP_EXPERIMENT_TASK_FEATURE (FLOW_INSTANCE_ID);

CREATE TABLE AIAI_LP_SNIPPET (
  ID          SERIAL PRIMARY KEY,
  VERSION     NUMERIC(5, 0)  NOT NULL,
  NAME      VARCHAR(50) not null,
  SNIPPET_TYPE      VARCHAR(50) not null,
  SNIPPET_VERSION   VARCHAR(20) not null,
  FILENAME  VARCHAR(250),
  CHECKSUM    VARCHAR(2048),
  IS_SIGNED   BOOLEAN not null default false,
  IS_REPORT_METRICS   BOOLEAN not null default false,
  ENV         VARCHAR(50) not null,
  PARAMS         VARCHAR(1000),
  CODE_LENGTH integer not null,
  IS_FILE_PROVIDED   BOOLEAN not null default false
);

CREATE UNIQUE INDEX AIAI_LP_SNIPPET_UNQ_IDX
  ON AIAI_LP_SNIPPET (NAME, SNIPPET_VERSION);

CREATE TABLE AIAI_LP_FLOW (
  ID            SERIAL PRIMARY KEY,
  VERSION       NUMERIC(5, 0)  NOT NULL,
  CODE      varchar(50)  NOT NULL,
  CREATED_ON    bigint NOT NULL,
  PARAMS        TEXT not null,
  IS_LOCKED      BOOLEAN not null default false,
  IS_VALID      BOOLEAN not null default false
);

CREATE UNIQUE INDEX AIAI_LP_FLOW_CODE_UNQ_IDX
  ON AIAI_LP_FLOW (CODE);

CREATE TABLE AIAI_LP_FLOW_INSTANCE (
  ID            SERIAL PRIMARY KEY,
  VERSION       NUMERIC(5, 0)  NOT NULL,
  FLOW_ID       NUMERIC(10, 0) NOT NULL,
  CREATED_ON    bigint NOT NULL,
  COMPLETED_ON  bigint,
  INPUT_RESOURCE_PARAM  TEXT NOT NULL,
  PRODUCING_ORDER integer not null NOT NULL,
  IS_VALID      BOOLEAN not null default false,
  EXEC_STATE   smallint not null default 0
);

CREATE TABLE AIAI_LP_ATLAS
(
  ID            SERIAL PRIMARY KEY,
  VERSION       NUMERIC(5, 0)  NOT NULL,
  NAME          VARCHAR(50)   NOT NULL,
  DESCRIPTION   VARCHAR(250)  NOT NULL,
  CODE          VARCHAR(50)   NOT NULL,
  EXPERIMENT    TEXT NOT NULL
);