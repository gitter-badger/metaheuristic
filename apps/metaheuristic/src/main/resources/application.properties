#
# Metaheuristic, Copyright (C) 2017-2019  Serge Maslyukov
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

#spring.cache.cache-names=processors,batches,experiments,source_codes,functions,exec_contexts,accounts,companies,dispatchers
#spring.cache.caffeine.spec=maximumSize=10000,expireAfterAccess=1h


spring.jmx.enabled=false
spring.profiles.active=dispatcher

server.http2.enabled=true
server.forward-headers-strategy=native

spring.thymeleaf.cache=true
spring.jpa.open-in-view=true

# Whether to resolve the multipart request lazily at the time of file or parameter access.
spring.servlet.multipart.resolve-lazily = false
spring.servlet.multipart.enabled = true
spring.servlet.multipart.max-file-size=150MB
spring.servlet.multipart.max-request-size=150MB

logging.level.root = warn

# ---------------- Metaheuristic logging -------------------
logging.file.name=logs/mh.log
#logging.level.ai.metaheuristic.ai.*=warn
logging.level.ai.metaheuristic.ai.*=info
logging.level.ai.metaheuristic.commons.utils.ZipUtils=debug
#logging.level.ai.metaheuristic.ai.processor.actors.DownloadResourceActor=info
#logging.level.ai.metaheuristic.ai.processor.DispatcherRequestorr=info
#logging.level.ai.metaheuristic.ai.processor.ProcessorTaskService=info
#logging.level.ai.metaheuristic.ai.core.ExecProcessService=info
logging.level.ai.metaheuristic.ai.dispatcher.source_code.SourceCodeService=warn
logging.level.ai.metaheuristic.ai.dispatcher.southbridge.SouthbridgeController=warn
logging.level.ai.metaheuristic.ai.Schedulers=warn
logging.level.ai.metaheuristic.ai.dispatcher.processor.ProcessorCache=warn
logging.level.ai.metaheuristic.ai.Monitoring=error

#logging.level.org.springframework.data=warn
#logging.level.org.springframework.security=warn
#logging.level.org.springframework.web.*=warn

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url= ${JDBC_DATABASE_URL}
spring.datasource.driver-class-name = ${MH_JDBC_DRIVER_CLASS_NAME}
spring.datasource.username= ${JDBC_DATABASE_USERNAME}
spring.datasource.password= ${JDBC_DATABASE_PASSWORD}

spring.datasource.maxActive=100
spring.datasource.maxIdle=50
spring.datasource.minIdle=50
spring.datasource.initialSize=50
spring.datasource.removeAbandoned=true
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

spring.jpa.properties.hibernate.dialect=${MH_HIBERNATE_DIALECT}

spring.jpa.show-sql = false
spring.jpa.properties.hibernate.format_sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.properties.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE

spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory


# ============== ai.metaheuristic ==================
# ------------- common -----------------
#mh.thread-number=${MH_THREAD_NUMBER}

mh.branding=Metaheuristic project


# --- dispatcher ---

mh.dispatcher.enabled=true

#mh.dispatcher.is-ssl-required=${MH_IS_SSL_REQUIRED}

# by default security is enabled
#mh.dispatcher.is-security-enabled=${MH_IS_SECURITY_ENABLED}


#mh.dispatcher.dir=${MH_DISPATCHER_DIR}
mh.dispatcher.dir=mh-dispatcher

#mh.dispatcher.public-key=${MH_PUBLIC_KEY}

# use gen-passwords application to create actual encoded password
# or
# $2a$10$jaQkP.gqwgenn.xKtjWIbeP4X.LDJx92FKaQ9VfrN2jgdOUTPTMIu
# which is - 123
mh.dispatcher.master-password=${MH_MASTER_PASSWORD:#{null}}
mh.dispatcher.master-username=${MH_MASTER_USERNAME:#{null}}

# ------------- processor -----------------

#mh.processor.enabled=${MH_IS_PROCESSOR_ENABLED}
mh.processor.dir=mh-processor

